/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diet.server.conversation.ui;

import diet.server.Conversation;
import diet.server.Participant;
import diet.server.conversationhistory.Conversant;
import diet.server.conversationhistory.turn.Turn;
import diet.tg.TelegramParticipant;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.Vector;

/**
 *
 * @author LX1C
 */
public class JGroupsConversationHistoriesPanel extends javax.swing.JPanel {

    
    JGroupsConversationHistories  jgch;
    
    
    /**
     * Creates new form JGroupsConversationHistoriesPanel
     */
    public JGroupsConversationHistoriesPanel(JGroupsConversationHistories  jgch, String name) {
        this.jgch=jgch;
        initComponents();
        this.jLabel1.setText( name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(500, 500));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 20));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 20));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Participant group");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        add(jPanel2);

        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 180));
        jScrollPane1.setViewportView(jTextPane1);

        add(jScrollPane1);

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 20));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jTextField1.setMaximumSize(new java.awt.Dimension(10000000, 2147483647));
        jPanel1.add(jTextField1);

        jButton1.setText("SEND ");
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.setMaximumSize(new java.awt.Dimension(80, 30));
        jButton1.setMinimumSize(new java.awt.Dimension(61, 30));
        jButton1.setPreferredSize(new java.awt.Dimension(80, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String textToSend = this.jTextField1.getText();
        Vector recipients= this.jgch.cH.getConversation().getController().pp.getParticipants(this.jLabel1.getText());
        
        if(this.jgch.telegram){
            for(int i =0;i<recipients.size();i++){
                TelegramParticipant tp = (TelegramParticipant)recipients.elementAt(i);
                this.jgch.cH.getConversation().telegram_sendInstructionToParticipant_MonospaceFont(tp, textToSend);
            }  
        }
        else{
             for(int i =0;i<recipients.size();i++){
                Participant p = (Participant)recipients.elementAt(i);
                this.jgch.cH.getConversation().sendInstructionToParticipant(p, textToSend);
            }  
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables


public void processTurn(Turn t){
    
    String format1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ENGLISH).format(t.getTimeOfCreationOnServer());

    
     //Conversant sender = t.getSender();
     //Conversant apparentSender = t.getApparentSender();
     
     String senderUsername ="";
     String apparentSenderUsername="";
     
     try{
          senderUsername = t.getSender().getUsername();
     }
     catch(Exception e){
        //e.printStackTrace();
     }
     
      try{
          apparentSenderUsername = t.getApparentSender().getUsername();
     }
     catch(Exception e){
       // e.printStackTrace();
     }
     
     
     
     String line = "";
     line = line+format1+ " ";
     
     if(senderUsername.equalsIgnoreCase(apparentSenderUsername)){
        line = line+ senderUsername+":";
     }
     else{
         line = line+ "FAKETURN. Real sender: "+senderUsername+ " Apparent sender: "+apparentSenderUsername+ ":";
     }
     line = line + "\n"+t.getText() + "\n\n";
     
     try{
        this.jTextPane1.getDocument().insertString(jTextPane1.getDocument().getLength(), line, null);
        
         System.err.println("jgch adding turn33: "+ line);
        
     } catch (Exception e){
         e.printStackTrace();
         Conversation.saveErr(e);
     }   
     
     
}








}


