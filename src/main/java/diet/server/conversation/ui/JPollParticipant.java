/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diet.server.conversation.ui;

import diet.server.Conversation;
import diet.server.ConversationController.ui.CustomDialog;
import diet.server.ConversationUIManager;
import diet.tg.TelegramParticipant;
import java.awt.Color;
import java.awt.Toolkit;
import java.util.Vector;
import javax.swing.JTextField;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;

/**
 *
 * @author LX1C
 */
public class JPollParticipant extends javax.swing.JPanel {

    ConversationUIManager cui;
    Conversation c;
    
    
    /**
     * Creates new form JPollParticipant
     */
    public JPollParticipant(Conversation c,ConversationUIManager cui) {
        initComponents();
        this.c=c;
        this.cui=cui;
        
        MaxLengthTextDocument maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField12.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField12.setDocument(maxLength);
        try{maxLength.insertString(0, "very easy", null);}catch(Exception e){e.printStackTrace();  }
        
        maxLength = new MaxLengthTextDocument();
       // try{maxLength.insertString(0, jTextField13.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField13.setDocument(maxLength);
        try{maxLength.insertString(0, "easy", null);}catch(Exception e){e.printStackTrace();  }
        
        
        
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField14.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField14.setDocument(maxLength);
        try{maxLength.insertString(0, "difficult", null);}catch(Exception e){e.printStackTrace();  }
        
        
        
        
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField15.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField15.setDocument(maxLength);
        try{maxLength.insertString(0, "very difficult", null);}catch(Exception e){e.printStackTrace();  }
        
        
        
        
        
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField16.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField16.setDocument(maxLength);
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField17.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField17.setDocument(maxLength);
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField18.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField18.setDocument(maxLength);
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField19.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField19.setDocument(maxLength);
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField20.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField20.setDocument(maxLength);
        //try{maxLength.insertString(0, jTextField21.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength = new MaxLengthTextDocument();
        maxLength.setMaxChars(99); 
        this.jTextField21.setDocument(maxLength);
        maxLength = new MaxLengthTextDocument();
        //try{maxLength.insertString(0, jTextField31.getText(), null);}catch(Exception e){e.printStackTrace();  }
        maxLength.setMaxChars(99); 
        this.jTextField31.setDocument(maxLength);
        try{maxLength.insertString(0, "How did you find the task?", null);}catch(Exception e){e.printStackTrace();  }
        
        
        //this.jTextField12.getDocument().
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(50, 150, 50, 150));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Title: ");
        jPanel4.add(jLabel1);

        jTextField31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField31.setText("How did you find the task?");
        jTextField31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField31ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField31);

        jCheckBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox2.setText("Allow multiple selections");
        jPanel4.add(jCheckBox2);

        add(jPanel4);

        jTextField12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField12.setText("Very easy");
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        add(jTextField12);

        jTextField13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField13.setText("Easy");
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        add(jTextField13);

        jTextField14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField14.setText("Somewhat difficult                                                        ");
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });
        add(jTextField14);

        jTextField15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField15.setText("Very dfficult");
        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });
        add(jTextField15);

        jTextField16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });
        add(jTextField16);

        jTextField17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField17ActionPerformed(evt);
            }
        });
        add(jTextField17);

        jTextField18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });
        add(jTextField18);

        jTextField19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField19ActionPerformed(evt);
            }
        });
        add(jTextField19);

        jTextField20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });
        add(jTextField20);

        jTextField21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField21ActionPerformed(evt);
            }
        });
        add(jTextField21);

        jPanel3.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel3.setPreferredSize(new java.awt.Dimension(208, 30));

        jButton2.setText("SEND TO ALL ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(313, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        add(jPanel3);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jTextField15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15ActionPerformed

    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed

    private void jTextField19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField19ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    private void jTextField21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField21ActionPerformed

    private void jTextField31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField31ActionPerformed
        // TODO add your handling code here:
        JTextField jtf = (JTextField)evt.getSource();
        if(jtf.getText().length()<1) jtf.setBackground(Color.LIGHT_GRAY);
        
        
    }//GEN-LAST:event_jTextField31ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Vector<String> options = new Vector();
        options.add(jTextField12.getText());
        options.add(jTextField13.getText());
        options.add(jTextField14.getText());
        options.add(jTextField15.getText());
        options.add(jTextField16.getText());
        options.add(jTextField17.getText());
        options.add(jTextField18.getText());
        options.add(jTextField19.getText());
        options.add(jTextField20.getText());
        options.add(jTextField21.getText());
      
        
        String title = (jTextField31.getText());
        
        boolean allowDuplicate = this.jCheckBox2.isSelected();
        
        Vector<String> realValues = new Vector();
        
        String questionnaire = "The questionnaire will be:\n\n\n"+title+"\n\n" ;
        
        for(int i=0;i<options.size();i++){
            if(options.elementAt(i).equalsIgnoreCase("")){
                
            }
            else{
                realValues.add(options.elementAt(i));
                questionnaire = questionnaire+ ""+options.elementAt(i)+"\n";
            }
        }
       
        
         boolean result= CustomDialog.getBoolean(questionnaire, "SEND", "CANCEL", "Please answer");
         if(!result) return;
        
        Vector vp = c.getParticipants().getAllParticipants();
        for(int i=0;i<vp.size();i++){
            TelegramParticipant tp = (TelegramParticipant)vp.elementAt(i);
            c.telegram_sendPoll(tp, "This is an explanation", title, realValues.toArray(new String[]{}), allowDuplicate);
            
            Conversation.printWSln("Main", "Sending poll to "+tp.getUsername());
        }
        
       
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField16ActionPerformed


    public void checkIfIsOKToSend(){
           if(this.jTextField12.getText().equalsIgnoreCase("")){
               this.jTextField12.setBackground(Color.LIGHT_GRAY);
           }      
    }
    
    
    
    
    
    
    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField31;
    // End of variables declaration//GEN-END:variables



public class MaxLengthTextDocument extends PlainDocument {
    //Store maximum characters permitted
    private int maxChars;

    @Override
    public void insertString(int offs, String str, AttributeSet a)
            throws BadLocationException {
        // the length of string that will be created is getLength() + str.length()
        if(str != null && (getLength() + str.length() < maxChars)){
            super.insertString(offs, str, a);
        }
    }

        public void setMaxChars(int maxChars) {
            this.maxChars = maxChars;
        }
    
}




public class DocumentSizeFilter extends DocumentFilter {
    int maxCharacters;
    boolean DEBUG = false;
 
    public DocumentSizeFilter(int maxChars) {
        maxCharacters = maxChars;
    }
 
    public void insertString(FilterBypass fb, int offs,
                             String str, AttributeSet a)
        throws BadLocationException {
        if (DEBUG) {
            System.out.println("in DocumentSizeFilter's insertString method");
        }
 
        //This rejects the entire insertion if it would make
        //the contents too long. Another option would be
        //to truncate the inserted string so the contents
        //would be exactly maxCharacters in length.
        if ((fb.getDocument().getLength() + str.length()) <= maxCharacters)
            super.insertString(fb, offs, str, a);
        else
            Toolkit.getDefaultToolkit().beep();
    }
     
    public void replace(FilterBypass fb, int offs,
                        int length, 
                        String str, AttributeSet a)
        throws BadLocationException {
        if (DEBUG) {
            System.out.println("in DocumentSizeFilter's replace method");
        }
        //This rejects the entire replacement if it would make
        //the contents too long. Another option would be
        //to truncate the replacement string so the contents
        //would be exactly maxCharacters in length.
        if ((fb.getDocument().getLength() + str.length()
             - length) <= maxCharacters)
            super.replace(fb, offs, length, str, a);
        else
            Toolkit.getDefaultToolkit().beep();
    }
 
}








}
