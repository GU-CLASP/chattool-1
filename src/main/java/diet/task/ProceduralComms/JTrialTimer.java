/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package diet.task.ProceduralComms;

import java.util.Date;
import javax.swing.SwingUtilities;

/**
 *
 * @author gj
 */
public class JTrialTimer extends javax.swing.JFrame {

    /**
     * Creates new form JTrialTimer
     */
    
    JTrialTimerActionRecipientInterface jtti;
    Thread t;
    
    
    public JTrialTimer( JTrialTimerActionRecipientInterface jtti, long trialDuration) {
        initComponents();
        this.jtti=jtti;
        this.jProgressBar1.setStringPainted(true);
        this.pack();
        this.setVisible(true);
        this.jLabel1.setText("");
        this.durationOfEachTrial=trialDuration;
    }
    
    
    public JTrialTimer(String jframetitle, JTrialTimerActionRecipientInterface jtti, long trialDuration) {
        super(jframetitle);
        initComponents();
        this.jtti=jtti;
        this.jProgressBar1.setStringPainted(true);
        this.pack();
        this.setVisible(true);
        this.jLabel1.setText("");
        this.durationOfEachTrial=trialDuration;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("+ 10 secs");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("PAUSE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("-10");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("next");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("START");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))))
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         this.timeOfEndOfTrial= this.timeOfEndOfTrial+10000;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         if(this.jButton2.getText().equalsIgnoreCase("pause")){
             this.paus=true;
             this.jButton2.setText("resume");    
         }
         else{
              this.paus=false;
              this.jButton2.setText("pause"); 
         }
         
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        this.jToggleButton1.setSelected(true);
        this.jToggleButton1.setEnabled(false);
        this.startTimer();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        this.nextTrial();
        jtti.processNotification("next");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.timeOfEndOfTrial= this.timeOfEndOfTrial-10000;
    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    
    public void startTimer(){
        SwingUtilities.invokeLater(new Runnable(){public void run(){
             jToggleButton1.setSelected(true);
             jToggleButton1.setEnabled(false);
        
        }});
        
        
        t = new Thread(){public void run(){
           timerLoop(); 
          }
        };
        t.start();
        
    }
  
  long durationOfEachTrial = 10000;
  long timeOfEndOfTrial;
  int trialnumber = 0;
  
  public boolean doLoop = true;
  boolean paus = false;
    
  
    public synchronized void timerLoop(){
        this.timeOfEndOfTrial= new Date().getTime()+this.durationOfEachTrial;
        
        while(doLoop){
            
             long timeRemaining = this.timeOfEndOfTrial-   new Date().getTime();
            
             if(timeRemaining >= 1000){
                 try{
                   long startnOfSleep =new Date().getTime();
                   wait(1000);
                   long endOfSleep = new Date().getTime();  
                   if(paus)this.timeOfEndOfTrial = this.timeOfEndOfTrial+ (endOfSleep-startnOfSleep);
                 }
                 catch(Exception e){ e.printStackTrace(); }
                 }
             
             else if (timeRemaining <1000   && timeRemaining >0){
                 try{
                   long startnOfSleep =new Date().getTime();
                   wait(1000);
                   long endOfSleep = new Date().getTime();  
                   if(paus)this.timeOfEndOfTrial = this.timeOfEndOfTrial+ (endOfSleep-startnOfSleep);
                 }
                 catch(Exception e){ e.printStackTrace(); }
                 
              } 
              
             timeRemaining = this.timeOfEndOfTrial-   new Date().getTime();
             if (timeRemaining <= 0){
                  this.timeOfEndOfTrial = new Date().getTime()+ this.durationOfEachTrial;
                  this.trialnumber++;
                  informOthersOfTimeout();
                  
              }
              final double percentage = 100*(((double)timeRemaining)/(double)this.durationOfEachTrial);
              final long timeRemainingMilli = timeRemaining;
              SwingUtilities.invokeLater(new Runnable(){
               
                 public void run(){
                     
                      jProgressBar1.setValue((int)percentage);    
                      String timeRAsText = (diet.utils.Conversion.convertMillisecondsIntoText(+1000+timeRemainingMilli));
                      jProgressBar1.setString(""+timeRemainingMilli+ " ( T - "+timeRAsText+")");
                      jLabel1.setText(""+trialnumber);
                     if(jtti!=null) jtti.changeClientProgressBars((int)percentage, timeRAsText );
                 }
              });
             
             
        }  
       
    }
    
    
    
    public synchronized void informOthersOfTimeout(){
        jtti.processNotification("timeout");
    }
    
    
    public  void nextTrial(){
         
         this.timeOfEndOfTrial= new Date().getTime()+this.durationOfEachTrial;
         this.trialnumber++;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JTrialTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JTrialTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JTrialTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JTrialTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JTrialTimer(null,5000).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
